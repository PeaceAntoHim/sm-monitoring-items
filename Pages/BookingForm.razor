@page "/book"
@using System.ComponentModel.DataAnnotations
@inject HttpClient Http
@inject NavigationManager Navigation
@using Microsoft.AspNetCore.Components.Forms

<h3>Booking Form</h3>

@if (!string.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-success">@successMessage</div>
}
@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

<EditForm Model="booking" OnValidSubmit="HandleBooking">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Vehicle Plate</label>
        <InputText @bind="booking.VehiclePlate" class="form-control" />
    </div>

    <div class="mb-3">
        <label>Start Date</label>
        <InputDate @bind="booking.StartDate" TValue="DateTime" class="form-control" />
    </div>

    <div class="mb-3">
        <label>End Date</label>
        <InputDate @bind-Value="booking.EndDate" TValue="DateTime" class="form-control" />
    </div>

    <div class="mb-3">
        <label>Purpose</label>
        <InputTextArea @bind="booking.Purpose" class="form-control" />
    </div>

    <button class="btn btn-success" type="submit">Submit</button>
</EditForm>

@code {
    private BookingRequestDto booking = new();
    private string? successMessage;
    private string? errorMessage;

    private async Task HandleBooking()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/booking", booking);

            if (response.IsSuccessStatusCode)
            {
                successMessage = "Booking request submitted successfully.";
                errorMessage = null;
                booking = new(); // Reset form
            }
            else
            {
                errorMessage = "Failed to submit booking.";
                successMessage = null;
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error: {ex.Message}";
            successMessage = null;
        }
    }

    public class BookingRequestDto
    {
        [Required]
        public string VehiclePlate { get; set; } = string.Empty;

        [Required]
        public DateTime StartDate { get; set; } = DateTime.Today;

        [Required]
        public DateTime EndDate { get; set; } = DateTime.Today;

        [Required]
        public string Purpose { get; set; } = string.Empty;
    }
}
