@page "/login"
@using System.ComponentModel.DataAnnotations
@using Blazored.LocalStorage
@using Microsoft.AspNetCore.Components.Forms
@inject HttpClient Http
@inject NavigationManager Navigation
@inject ILocalStorageService LocalStorage

<h3 class="mb-4">üîê Login</h3>

@if (!string.IsNullOrEmpty(_errorMessage))
{
    <div class="alert alert-danger">@_errorMessage</div>
}

<EditForm Model="_loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-value="_loginModel.Email" class="form-control" />
    </div>

    <div class="mb-3">
        <label for="password">Password</label>
        <InputText id="password" @bind-value="_loginModel.Password" type="password" class="form-control" />
    </div>

    <button class="btn btn-primary w-100" type="submit">Login</button>
</EditForm>

@code {
    private LoginRequest _loginModel = new();
    private string? _errorMessage;

    private async Task HandleLogin()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/auth/login", _loginModel);

            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<LoginResponse>();

                if (result != null && !string.IsNullOrEmpty(result.Token))
                {
                    // Save JWT token
                    await LocalStorage.SetItemAsync("access_token", result.Token);

                    // Redirect
                    Navigation.NavigateTo("/dashboard");
                }
                else
                {
                    _errorMessage = "Invalid response from server.";
                }
            }
            else
            {
                _errorMessage = "Invalid email or password.";
            }
        }
        catch (Exception ex)
        {
            _errorMessage = $"Login failed: {ex.Message}";
        }
    }

    public class LoginRequest
    {
        [Required]
        public string Email { get; set; } = string.Empty;

        [Required]
        public string Password { get; set; } = string.Empty;
    }

    public class LoginResponse
    {
        public string Token { get; set; } = string.Empty;
    }
}
